package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"
	"review-pull-request-be/graph/model"
)

// CreatePerspective is the resolver for the createPerspective field.
func (r *mutationResolver) CreatePerspective(ctx context.Context, input model.NewPerspective) (*model.Perspective, error) {
	panic(fmt.Errorf("not implemented: CreatePerspective - createPerspective"))
}

// Perspectives is the resolver for the perspectives field.
func (r *queryResolver) Perspectives(ctx context.Context) ([]*model.Perspective, error) {
	return []*model.Perspective{
		{ID: "1", Text: "perspective1"},
		{ID: "2", Text: "perspective2"},
		{ID: "3", Text: "perspective3"},
		{ID: "4", Text: "perspective4"},
		{ID: "5", Text: "perspective5"},
		{ID: "6", Text: "perspective6"},
		{ID: "7", Text: "perspective7"},
		{ID: "8", Text: "perspective8"},
		{ID: "9", Text: "perspective9"},
	}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewPerspective) (*model.Perspective, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
